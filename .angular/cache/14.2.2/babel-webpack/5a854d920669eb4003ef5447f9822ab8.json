{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"keycloak-angular\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(keycloakService) {\n      this.keycloakService = keycloakService;\n    }\n\n    getLoggedUser() {\n      try {\n        const userDetails = this.keycloakService.getKeycloakInstance().idTokenParsed;\n        return userDetails;\n      } catch (e) {\n        console.error(\"Exception\", e);\n        return undefined;\n      }\n    }\n\n    isLoggedIn() {\n      return this.keycloakService.isLoggedIn();\n    }\n\n    loadUserProfile() {\n      return this.keycloakService.loadUserProfile();\n    }\n\n    login() {\n      this.keycloakService.login();\n    }\n\n    logout() {\n      debugger; // const origin = = 'https://localhost:4200'\n\n      this.keycloakService.logout(window.location.origin);\n    }\n\n    redirectToProfile() {\n      this.keycloakService.getKeycloakInstance().accountManagement();\n    }\n\n    getRoles() {\n      return this.keycloakService.getUserRoles();\n    }\n\n    hasUserRole(role) {\n      var _a, _b;\n\n      return ((_b = (_a = this.keycloakService) === null || _a === void 0 ? void 0 : _a.getUserRoles()) === null || _b === void 0 ? void 0 : _b.findIndex(r => r === role)) >= 0;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.KeycloakService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}