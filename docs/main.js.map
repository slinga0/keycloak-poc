{"version":3,"sources":["./src/app/landing/nav-bar/departments/department.component.ts","./src/app/landing/nav-bar/departments/department.component.html","./src/environments/keycloak.config.ts","./src/environments/environment.ts","./src/app/services/poc.service.ts","./src/app/landing/nav-bar/sites/add-sites/add-site.component.ts","./src/app/landing/nav-bar/sites/add-sites/add-site.component.html","./src/app/landing/nav-bar/departments/create-department/create-department.component.ts","./src/app/landing/nav-bar/departments/create-department/create-department.component.html","./src/app/landing/nav-bar/sites/sites.component.ts","./src/app/landing/nav-bar/sites/sites.component.html","./src/constants/user-permission.ts","./src/app/auth/service/local.service.ts","./src/app/services/host.url.service.ts","./src/app/services/http.service.ts","./src/app/auth/auth.guard.ts","./src/app/auth/service/auth.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/landing/nav-bar/nav-bar.component.ts","./src/app/landing/nav-bar/nav-bar.component.html","./src/app/app.module.ts","./src/environments/environment.prod.ts","./src/app/auth/keycloak-initializer.ts","./src/models/permissions.ts","./src/app/landing/nav-bar/home/home.component.ts","./src/app/app-routing.module.ts","./src/app/landing/nav-bar/view-permissions/view-permission.component.ts","./src/app/landing/nav-bar/view-permissions/view-permission.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { POCService } from './../../../services/poc.service';\nimport { CreateDepartment } from './create-department/create-department.component';\nimport { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-department',\n  templateUrl: './department.component.html',\n  styleUrls: ['./department.component.scss'],\n})\nexport class Department implements OnInit {\n  items = ['Department 1', 'Department 2', 'Department 3', 'Department 4', 'Department 5'];\n  users = ['User 1', 'User 2', 'User 3', 'User 4', 'User 5'];\n  expandedIndex = 0;\n  departments: any;\n  siteUsers: any = [];\n  constructor(public dialog: MatDialog, private pocService: POCService) {}\n  ngOnInit(): void {\n    this.getDepartments();\n    this.getSiteUsers();\n  }\n  addDepartment(isCreateDepartment: any) {\n    const data = {\n      dialogTitle:\"\",\n      isCreateDepartment:''\n    }\n    if (isCreateDepartment) {\n      data.dialogTitle = 'Create Department'\n      data.isCreateDepartment = isCreateDepartment;\n      const dialogRef = this.dialog.open(CreateDepartment, {\n        data: {\n          data\n        }\n      });\n\n      dialogRef.afterClosed().subscribe((result: any) => {\n        console.log(`Dialog result: ${result}`);\n      });\n    } else {\n      data.dialogTitle = 'Create Site User'\n      data.isCreateDepartment = isCreateDepartment;\n      const dialogRef = this.dialog.open(CreateDepartment, {\n        data: {\n          data\n        }\n      });\n\n      dialogRef.afterClosed().subscribe((result: any) => {\n        console.log(`Dialog result: ${result}`);\n      });\n    }\n  }\n  getDepartments(): void {\n    this.pocService.getDepartments().then(departments => {\n      debugger;\n      this.departments = departments.departments;\n    })\n  }\n  getSiteUsers(): void {\n    debugger;\n    this.pocService.getSiteUsers().then(siteUsers => {\n      debugger;\n      this.siteUsers = siteUsers.users;\n    })\n  }\n}\n","<div style=\"width: 100%; display: table;\">\n  <div style=\"display: table-row\">\n    <div style=\"width: 600px; display: table-cell;\">\n  <cdk-accordion class=\"example-accordion\">\n    <cdk-accordion-item\n      *ngFor=\"let item of departments; let index = index;\"\n      #accordionItem=\"cdkAccordionItem\"\n      class=\"example-accordion-item\"\n      role=\"button\"\n      tabindex=\"0\"\n      [attr.id]=\"'accordion-header-' + index\"\n      [attr.aria-expanded]=\"accordionItem.expanded\"\n      [attr.aria-controls]=\"'accordion-body-' + index\">\n      <div class=\"example-accordion-item-header\" (click)=\"accordionItem.toggle()\">\n        {{ item }}\n        <!-- <span class=\"example-accordion-item-description\">\n          Click to {{ accordionItem.expanded ? 'close' : 'open' }}\n        </span> -->\n      </div>\n      <!-- <div\n        class=\"example-accordion-item-body\"\n        role=\"region\"\n        [style.display]=\"accordionItem.expanded ? '' : 'none'\"\n        [attr.id]=\"'accordion-body-' + index\"\n        [attr.aria-labelledby]=\"'accordion-header-' + index\">\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Perferendis\n        excepturi incidunt ipsum deleniti labore, tempore non nam doloribus blanditiis\n        veritatis illo autem iure aliquid ullam rem tenetur deserunt velit culpa?\n      </div> -->\n    </cdk-accordion-item>\n  </cdk-accordion>\n  <div>\n    Users\n    <cdk-accordion class=\"example-accordion\">\n      <cdk-accordion-item\n        *ngFor=\"let item of siteUsers; let index = index;\"\n        #accordionItem=\"cdkAccordionItem\"\n        class=\"example-accordion-item\"\n        role=\"button\"\n        tabindex=\"0\"\n        [attr.id]=\"'accordion-header-' + index\"\n        [attr.aria-expanded]=\"accordionItem.expanded\"\n        [attr.aria-controls]=\"'accordion-body-' + index\">\n        <div class=\"example-accordion-item-header\" (click)=\"accordionItem.toggle()\">\n          {{ item }}\n          <span class=\"example-accordion-item-description\">\n            Click to {{ accordionItem.expanded ? 'close' : 'open' }}\n          </span>\n        </div>\n        <div\n          class=\"example-accordion-item-body\"\n          role=\"region\"\n          [style.display]=\"accordionItem.expanded ? '' : 'none'\"\n          [attr.id]=\"'accordion-body-' + index\"\n          [attr.aria-labelledby]=\"'accordion-header-' + index\">\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Perferendis\n          excepturi incidunt ipsum deleniti labore, tempore non nam doloribus blanditiis\n          veritatis illo autem iure aliquid ullam rem tenetur deserunt velit culpa?\n        </div>\n      </cdk-accordion-item>\n    </cdk-accordion>\n  </div>\n</div>\n<div style=\"display: table-cell;float:right\">\n  <button mat-flat-button color=\"primary\" (click)='addDepartment(true)'>Add Department </button>\n  <button mat-flat-button color=\"primary\" (click)='addDepartment(false)'>Add SiteUser </button></div>\n</div>\n</div>\n\n\n","/**\n * Here you can add the configuration related to keycloak\n * So we can use this common config for diffrent environment\n */\nimport { KeycloakConfig } from 'keycloak-js';\n\nconst keycloakConfig: KeycloakConfig = {\n    url: 'https://dev-eai-1.dev.terarecon.in/auth',\n    realm: 'master',\n    clientId: 'neuro-client',\n};\n\nexport default keycloakConfig;\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nimport keycloakConfig from './keycloak.config';\nconst hostname = 'dev-eai-1.dev.terarecon.in';\nconst protocol = 'https:';\nexport const environment = {\n  production: false,\n  keycloak: keycloakConfig,\n  webServer: {\n    createSites: `${protocol}//${hostname}/api/lrp/realm`,\n    createUser: `${protocol}//${hostname}/api/lrp/realm/user`,\n    department: `${protocol}//${hostname}/api/lrp/department`,\n    departmentPermissions: `${protocol}//${hostname}/api/lrp/user/departments`,\n    users: `${protocol}//${hostname}/api/lrp/realm/user`,\n  },\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { environment } from 'src/environments/environment';\nimport { HttpService } from './http.service';\nimport { HostUrlService } from './host.url.service';\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class POCService {\n  constructor(private hostUrlService: HostUrlService, private httpService: HttpService) {}\n  public createSite(siteName: any): Promise<any> {\n    const obj = {\n      name : siteName\n    }\n    const url = this.hostUrlService.getRealmURL();\n\n    const data = this.getJSONData(siteName);\n    const httpOptions = {\n      headers: new HttpHeaders({ 'lrp-site-name': 'master', 'Content-Type': 'application/json'  }),\n    };\n    return this.httpService.postRequest(url, obj, httpOptions);\n  }\n  private getJSONData(data: any): any {\n    return JSON.stringify(data);\n  }\n\n  public getSites(): Promise<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'lrp-site-name': 'master', 'Content-Type': 'application/json'  }),\n    };\n    const url = this.hostUrlService.getRealmURL();\n    return this.httpService.getRequest(url,httpOptions);\n  }\n  public getSite(siteName: any): Promise<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'lrp-site-name': 'master', 'Content-Type': 'application/json'  }),\n    };\n    let url = this.hostUrlService.getRealmURL();\n    url = url + '/' + siteName + '';\n    return this.httpService.getRequest(url,httpOptions);\n  }\n  public createSiteUser(siteuserDetails: any): Promise<any> {\n\n    const url = this.hostUrlService.getCreateSiteUserRealm();\n    const data = this.getJSONData(siteuserDetails);\n    const httpOptions = {\n      headers: new HttpHeaders({ 'lrp-site-name': siteuserDetails.isAdmin ? 'master' : environment.keycloak.realm, 'Content-Type': 'application/json'  }),\n    };\n    return this.httpService.postRequest(url, data, httpOptions);\n  }\n  public getDepartments(): Promise<any> {\n    // 'site-one'\n    const httpOptions = {\n      headers: new HttpHeaders({ 'lrp-site-name': environment.keycloak.realm, 'Content-Type': 'application/json'  }),\n    };\n    const url = this.hostUrlService.getDepartmentURL();\n    return this.httpService.getRequest(url,httpOptions);\n  }\n  public getDepartmentsUserPermissions(userName: any): Promise<any> {\n    // 'site-one'\n    const httpOptions = {\n      headers: new HttpHeaders({ 'lrp-site-name': environment.keycloak.realm, 'Content-Type': 'application/json'  }),\n    };\n    let url = this.hostUrlService.getDepartmentURLPermissions();\n    url = url + '/' + userName + '';\n    return this.httpService.getRequest(url, httpOptions);\n  }\n  public createDepartment(siteuserDetails: any): Promise<any> {\n\n    const url = this.hostUrlService.getDepartmentURL();\n    const data = this.getJSONData(siteuserDetails);\n    const httpOptions = {\n      headers: new HttpHeaders({ 'lrp-site-name': environment.keycloak.realm, 'Content-Type': 'application/json'  }),\n    };\n    return this.httpService.postRequest(url, data, httpOptions);\n  }\n  public addPermissions(permissionObj: any): Promise<any> {\n\n    const url = this.hostUrlService.getDepartmentURLPermissions();\n    const data = this.getJSONData(permissionObj);\n    const httpOptions = {\n      headers: new HttpHeaders({ 'lrp-site-name': environment.keycloak.realm, 'Content-Type': 'application/json'  }),\n    };\n    return this.httpService.postRequest(url, data, httpOptions);\n  }\n  public getSiteUsers(): Promise<any> {\n    // 'site-one'\n    const httpOptions = {\n      headers: new HttpHeaders({ 'lrp-site-name': environment.keycloak.realm, 'Content-Type': 'application/json'  }),\n    };\n    let url = this.hostUrlService.getUsers();\n    url = url + '/' + '?realm=' +  environment.keycloak.realm + '';\n    return this.httpService.getRequest(url, httpOptions);\n  }\n}\n","import { POCService } from './../../../../services/poc.service';\nimport { Component, OnInit } from \"@angular/core\";\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Inject } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-add-site',\n  templateUrl: './add-site.component.html',\n})\nexport class AddSites implements OnInit {\n  dialogData: any;\n  siteDetails = {\n    siteName:''\n  }\n  siteUserDetails = {\n    firstName:'',\n    lastName:'',\n    realmName:\"\",\n    isAdmin:false,\n    emailid:''\n  }\n  durationInSeconds = 5;\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string, private pocService: POCService,private _snackBar: MatSnackBar) {\n\n  }\n  ngOnInit() {\n    // will log the entire data object\n    console.log(this.data);\n    this.dialogData = this.data;\n  }\n  addSite(): void {\n    this.pocService.createSite(this.siteDetails.siteName).then(res => {\n     alert('Addedd Success')\n    })\n  }\n  onChange(event: any): void {\n\n    console.log(event)\n    this.siteUserDetails.isAdmin = event.checked ? true : false;\n  }\n  createSiteUser(): void {\n    this.pocService.createSiteUser(this.siteUserDetails).then(res => {\n      alert('Success');\n    })\n  }\n}\n","<ng-container>\n  <div *ngIf=\"dialogData.data.isSite; then isSite; else isSiteAdmin\"></div>\n  <ng-template #isSite>\n    <h2 mat-dialog-title>{{ dialogData.data.dialogTitle }}</h2>\n    <div mat-dialog-content class=\"mat-typography\">\n      <div mat-card style=\"margin-bottom: 10px\">\n        <div mat-card-content>\n          <div class=\"col-md-12\">\n            <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"text\"\n                style=\"width: 100%\"\n                matInput\n                class\n\n                [(ngModel)]=\"siteDetails.siteName\"\n                placeholder=\"Site Name\"\n              />\n            </div>\n            <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"text\"\n                style=\"width: 100%\"\n                matInput\n                placeholder=\"Site url\"\n              />\n            </div>\n          </div>\n          <div class=\"col-md-12\">\n            <div mat-form-field>\n              <div\n                mat-select\n                placeholder=\"Unit Owner\"\n\n              ></div>\n\n              <div></div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <button\n            mat-button\n            mat-dialog-close\n            color=\"primary\"\n            style=\"margin: 2%\"\n          >\n            Cancel\n          </button>\n          <button\n            mat-button\n            mat-dialog-close\n            cdkFocusInitial\n            color=\"danger\"\n            style=\"margin: 2%\"\n            (click)='addSite();'\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template #isSiteAdmin>\n    <h2 mat-dialog-title>{{ dialogData.data.dialogTitle }}</h2>\n    <div mat-dialog-content class=\"mat-typography\">\n      <div mat-card style=\"margin-bottom: 10px\">\n        <div mat-card-content>\n          <div class=\"col-md-12\">\n            <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"text\"\n                style=\"width: 100%\"\n                matInput\n                class\n                [(ngModel)]='siteUserDetails.firstName'\n                placeholder=\"First Name\"\n              />\n            </div>\n            <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"text\"\n                style=\"width: 100%\"\n                matInput\n                [(ngModel)]='siteUserDetails.lastName'\n                placeholder=\"Last Name\"\n              />\n            </div>\n            <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"email\"\n                style=\"width: 100%\"\n                matInput\n                [(ngModel)]='siteUserDetails.emailid'\n                placeholder=\"Email \"\n              />\n            </div>\n            <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"text\"\n                style=\"width: 100%\"\n                matInput\n                placeholder=\"site name \"\n                [(ngModel)]='siteUserDetails.realmName'\n              />\n            </div>\n            <div mat-form-field style=\"margin: 2%\">\n              <mat-checkbox class=\"example-margin\"  [(ngModel)]='siteUserDetails.isAdmin' (change)='onChange($event)'></mat-checkbox>\n            </div>\n          </div>\n        </div>\n        <div>\n          <button\n            mat-button\n            mat-dialog-close\n            color=\"primary\"\n            style=\"margin: 2%\"\n          >\n            Cancel\n          </button>\n          <button\n            mat-button\n            mat-dialog-close\n            cdkFocusInitial\n            color=\"danger\"\n            style=\"margin: 2%\"\n            (click)='createSiteUser()'\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</ng-container>\n","import { POCService } from './../../../../services/poc.service';\nimport { Component, OnInit } from \"@angular/core\";\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-create-department',\n  templateUrl: './create-department.component.html',\n\n})\nexport class CreateDepartment implements OnInit {\n  departmentDetails = {\n    departmentName:''\n  }\n  siteUserDetails = {\n    firstName:'',\n    lastName:'',\n    realmName:\"\",\n    isAdmin:false,\n    emailid:''\n  }\n  dialogData: any;\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string, private pocService: POCService) {\n\n  }\n  ngOnInit(): void {\n    // will log the entire data object\n    console.log(this.data);\n    this.dialogData = this.data;\n  }\n  addDepartment(): void {\n    this.pocService.createDepartment(this.departmentDetails).then(res => {\n      alert('Success');\n    })\n  }\n  createSiteUser(): void {\n    this.pocService.createSiteUser(this.siteUserDetails).then(res => {\n      alert('Success');\n    })\n  }\n  onChange(event: any): void {\n\n    console.log(event)\n    this.siteUserDetails.isAdmin = event.checked ? true : false;\n  }\n}\n","<ng-container>\n  <div *ngIf=\"dialogData.data.isCreateDepartment; then isCreateDepartment; else isCreateSiteUser\"></div>\n  <ng-template #isCreateDepartment>\n    <h2 mat-dialog-title>{{ dialogData.data.dialogTitle }}</h2>\n    <div mat-dialog-content class=\"mat-typography\">\n      <div mat-card style=\"margin-bottom: 10px\">\n        <div mat-card-content>\n          <div class=\"col-md-12\">\n            <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"text\"\n                style=\"width: 100%\"\n                matInput\n                class\n                [(ngModel)]='departmentDetails.departmentName'\n                placeholder=\"Department Name\"\n              />\n            </div>\n            <!-- <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"text\"\n                style=\"width: 100%\"\n                matInput\n                placeholder=\"Department url\"\n              />\n            </div> -->\n          </div>\n\n        </div>\n        <div>\n          <button\n            mat-button\n            mat-dialog-close\n            color=\"primary\"\n            style=\"margin: 2%\"\n          >\n            Cancel\n          </button>\n          <button\n            mat-button\n            mat-dialog-close\n            cdkFocusInitial\n            color=\"danger\"\n            style=\"margin: 2%\"\n            (click)='addDepartment()'\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template #isCreateSiteUser>\n    <h2 mat-dialog-title>{{ dialogData.data.dialogTitle }}</h2>\n    <div mat-dialog-content class=\"mat-typography\">\n      <div mat-card style=\"margin-bottom: 10px\">\n        <div mat-card-content>\n          <div class=\"col-md-12\">\n            <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"text\"\n                style=\"width: 100%\"\n                matInput\n                class\n                placeholder=\"First Name\"\n                [(ngModel)]='siteUserDetails.firstName'\n              />\n            </div>\n            <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"text\"\n                style=\"width: 100%\"\n                matInput\n                placeholder=\"Last Name\"\n                [(ngModel)]='siteUserDetails.lastName'\n              />\n            </div>\n            <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"email\"\n                style=\"width: 100%\"\n                matInput\n                placeholder=\"Email\"\n                [(ngModel)]='siteUserDetails.emailid'\n              />\n            </div>\n            <div mat-form-field style=\"margin: 2%\">\n              <input\n                type=\"text\"\n                style=\"width: 100%\"\n                matInput\n                placeholder=\"sitename\"\n                [(ngModel)]='siteUserDetails.realmName'\n              />\n            </div>\n            <div mat-form-field style=\"margin: 2%\">\n              <mat-checkbox disabled class=\"example-margin\"  [(ngModel)]='siteUserDetails.isAdmin' (change)='onChange($event)'></mat-checkbox>\n            </div>\n          </div>\n        </div>\n        <div>\n          <button\n            mat-button\n            mat-dialog-close\n            color=\"primary\"\n            style=\"margin: 2%\"\n          >\n            Cancel\n          </button>\n          <button\n            mat-button\n            mat-dialog-close\n            cdkFocusInitial\n            color=\"danger\"\n            style=\"margin: 2%\"\n            (click)='createSiteUser()'\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</ng-container>\n","import { POCService } from './../../../services/poc.service';\nimport { AuthService } from '../../../auth/service/auth.service';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AddSites } from './add-sites/add-site.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-sites',\n  templateUrl: './sites.component.html',\n  styleUrls: ['./sites.component.scss']\n})\nexport class SitesComponent implements OnInit {\n  items = ['Site 1', 'Site 2', 'Site 3', 'Site 4', 'Site 5'];\n  expandedIndex = 0;\n  sites: any = [];\n  siteDetails: any;\n\n  constructor(public dialog: MatDialog, private pocService: POCService) { }\n  ngOnInit(): void {\n    this.getSites();\n  }\n  addSites(isSite: any){\n    const data = {\n      dialogTitle:\"\",\n      isSite:''\n    }\n    if (isSite) {\n      data.dialogTitle = 'Add Site';\n      data.isSite = isSite;\n      const dialogRef = this.dialog.open(AddSites, {\n        data: {\n          data\n        }\n      });\n\n      dialogRef.afterClosed().subscribe((result: any) => {\n        console.log(`Dialog result: ${result}`);\n      });\n    } else {\n      data.dialogTitle = 'Add Site Admin';\n      data.isSite = isSite;\n      const dialogRef = this.dialog.open(AddSites, {\n        data: {\n          data\n        }\n      });\n\n      dialogRef.afterClosed().subscribe((result: any) => {\n        console.log(`Dialog result: ${result}`);\n      });\n    }\n  }\n  getSites(): void {\n    this.pocService.getSites().then(sites => {\n\n      this.sites = sites.realms;\n    })\n  }\n  onOpen(event: any) {\n\n    this.pocService.getSite(event).then(res => {\n      this.siteDetails = res;\n    })\n  }\n}\n","<div style=\"width: 100%; display: table;\">\n  <div style=\"display: table-row\">\n    <div style=\"width: 600px; display: table-cell;\">\n  <cdk-accordion class=\"example-accordion\">\n    <cdk-accordion-item\n      *ngFor=\"let item of sites; let index = index;\"\n      #accordionItem=\"cdkAccordionItem\"\n      class=\"example-accordion-item\"\n      role=\"button\"\n      tabindex=\"0\"\n      (opened)=\"onOpen(item);\"\n      [attr.id]=\"'accordion-header-' + index\"\n      [attr.aria-expanded]=\"accordionItem.expanded\"\n      [attr.aria-controls]=\"'accordion-body-' + index\">\n      <div class=\"example-accordion-item-header\" (click)=\"accordionItem.toggle()\">\n        {{ item }}\n        <span class=\"example-accordion-item-description\">\n          Click to {{ accordionItem.expanded ? 'close' : 'open' }}\n        </span>\n      </div>\n      <div\n        class=\"example-accordion-item-body\"\n        role=\"region\"\n        [style.display]=\"accordionItem.expanded ? '' : 'none'\"\n        [attr.id]=\"'accordion-body-' + index\"\n        [attr.aria-labelledby]=\"'accordion-header-' + index\">\n        {{siteDetails?.displayName}}\n      </div>\n    </cdk-accordion-item>\n  </cdk-accordion>\n</div>\n<div style=\"display: table-cell;float:right\">\n  <button mat-flat-button color=\"primary\" (click)='addSites(true)'>Add Sites </button>\n  <button mat-flat-button color=\"primary\" (click)='addSites(false)'>Add SiteAdmin </button> </div>\n</div>\n</div>\n\n\n","export const RolePermissions = {\n  isSiteAdmin: false,\n  isSiteUser: false,\n  isSystemAdmin: false\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalService {\n\n  constructor() { }\n\n  public saveData(key: string, value: string) {\n    debugger;\n    localStorage.setItem(key, value);\n  }\n\n  public getData(key: string) {\n    return localStorage.getItem(key)\n  }\n  public removeData(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  public clearData() {\n    localStorage.clear();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HostUrlService {\n  private url: any;\n  constructor() {\n\n  }\n  public getRealmURL(): string {\n    this.url = `${environment.webServer.createSites}`;\n    return this.url;\n  }\n  public getCreateSiteUserRealm(): void {\n    this.url = `${environment.webServer.createUser}`;\n    return this.url;\n  }\n  public getDepartmentURL(): string {\n    this.url = `${environment.webServer.department}`;\n    return this.url;\n  }\n  public getDepartmentURLPermissions(): string {\n    this.url = `${environment.webServer.departmentPermissions}`;\n    return this.url;\n  }\n  public getUsers(): string {\n    this.url = `${environment.webServer.users}`;\n    return this.url;\n  }\n}\n","import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpService {\n  constructor(private http: HttpClient,) {}\n  getRequest(url: any, options?: any): Promise<any> {\n    if (options) {\n      options.observe = 'response';\n    } else {\n      options = { observe: 'response' };\n    }\n    return new Promise((resolve, reject) => {\n      this.http.get<any>(url, options).subscribe(\n        (response: any) => {\n          resolve(response.body);\n        },\n        (error: HttpErrorResponse) => {\n\n          reject(error);\n        }\n      );\n    });\n  }\n  postRequest(url: any, body: any, options?: any): Promise<any> {\n    if (options) {\n      options.observe = 'response';\n    } else {\n      options = { observe: 'response' };\n    }\n    return new Promise((resolve, reject) => {\n      this.http.post<any>(url, body, options).subscribe(\n        (response: any) => {\n          resolve(response.body);\n        },\n        (error: HttpErrorResponse) => {\n\n          reject(error);\n        }\n      );\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\n\n@Injectable()\nexport class AuthGuard extends KeycloakAuthGuard {\n\n  constructor(protected router: Router, protected keycloakAngular: KeycloakService) {\n    super(router, keycloakAngular);\n  }\n\n\n  public async isAccessAllowed(route: ActivatedRouteSnapshot,state: RouterStateSnapshot): Promise<boolean | UrlTree> {\n\n    // Force the user to log in if currently unauthenticated.\n    if (!this.authenticated) {\n      await this.keycloakAngular.login({\n        redirectUri: window.location.origin + state.url,\n      });\n    }\n\n    // Get the roles required from the route.\n    const requiredRoles = route.data.roles;\n\n    // Allow the user to to proceed if no additional roles are required to access the route.\n    if (!(requiredRoles instanceof Array) || requiredRoles.length === 0) {\n      return true;\n    }\n\n    // Allow the user to proceed if all the required roles are present.\n    return requiredRoles.every((role) => this.roles.includes(role));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { KeycloakService } from 'keycloak-angular';\nimport { KeycloakProfile, KeycloakTokenParsed } from 'keycloak-js';\nimport { from, Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(private keycloakService: KeycloakService) {}\n\n  public getLoggedUser(): KeycloakTokenParsed | undefined {\n    try {\n      const userDetails: KeycloakTokenParsed | undefined = this.keycloakService.getKeycloakInstance()\n        .idTokenParsed;\n      return userDetails;\n    } catch (e) {\n      console.error(\"Exception\", e);\n      return undefined;\n    }\n  }\n\n  public isLoggedIn() : Promise<boolean> {\n    return this.keycloakService.isLoggedIn();\n  }\n\n  public loadUserProfile() : Promise<KeycloakProfile> {\n    return this.keycloakService.loadUserProfile();\n  }\n\n  public login() : void {\n    this.keycloakService.login();\n  }\n\n  public logout() : void {\n\n    // const origin = = 'https://localhost:4200'\n    window.sessionStorage.clear();\n    window.localStorage.clear();\n\n    this.keycloakService.isLoggedIn().then((status) => {\n      if (status) {\n        this.keycloakService.logout();\n      }\n    });\n\n    //this.keycloakService.logout('https://dev-eai-1.dev.terarecon.in/auth');\n  }\n\n  public redirectToProfile(): void {\n\n    this.keycloakService.getKeycloakInstance().accountManagement();\n  }\n\n  public getRoles(): string[] {\n    return this.keycloakService.getUserRoles();\n  }\n  hasUserRole(role: string): boolean {\n    return this.keycloakService?.getUserRoles()?.findIndex((r) => r === role) >= 0;\n  }\n}\n","import { Router } from '@angular/router';\nimport { environment } from './../environments/environment.prod';\nimport { Component, OnInit } from '@angular/core';\nimport { KeycloakProfile } from 'keycloak-js';\nimport { AuthService } from './auth/service/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'ng-keycloak';\n  public loggedIn = false;\n  public userProfile: KeycloakProfile = {};\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async ngOnInit(): Promise<void> {\n    this.loggedIn = await this.authService.isLoggedIn();\n    if (this.loggedIn) {\n      this.userProfile = await this.authService.loadUserProfile();\n    } else {\n      this.authService.login();\n    }\n  }\n\n  public login(): void {\n    this.authService.login();\n  }\n\n  public logout(): void {\n    this.authService.logout();\n  }\n  getParameterFromUrl(parameter: string) {\n    const re = new RegExp(parameter + '=([a-z0-9-]+)&?');\n    const results = re.exec(window.location.href);\n\n    if (results) {\n      return results[1];\n    } else {\n      return '';\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"header\">\n    <header>\n      <app-nav-bar></app-nav-bar>\n    </header>\n  </div>\n  <div class=\"content\">\n    <app-home></app-home>\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { environment } from './../../../environments/environment.prod';\nimport { Router } from '@angular/router';\nimport { RolePermissions } from './../../../constants/user-permission';\nimport { UserPermissions } from './../../../models/permissions';\nimport { AuthService } from './../../auth/service/auth.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss'],\n})\nexport class NavBarComponent {\n  isSiteAdmin = false;\n  rolePermissions = RolePermissions;\n  constructor(private authService: AuthService, private router: Router) {\n\n    // tslint:disable-next-line:align\n    this.checkPermissions();\n\n\n\n  }\n  checkPermissions(): void {\n    debugger;\n    if (this.authService.hasUserRole(UserPermissions.SERVICE)) {\n      RolePermissions.isSiteAdmin = true;\n    } else if (this.authService.hasUserRole(UserPermissions.CLINICAL)) {\n      RolePermissions.isSiteUser = true;\n    }\n\n    // this.authService.\n    if (environment.keycloak.realm === 'master') {\n      RolePermissions.isSystemAdmin = true;\n    }\n\n  }\n  onNavigateSitePage(): void {\n\n    // tslint:disable-next-line:no-conditional-assignment\n    if (RolePermissions.isSystemAdmin) {\n      this.router.navigate([`/sites`]);\n    } else if (RolePermissions.isSiteUser) {\n      this.router.navigate([`/view-permissions`]);\n    } else if (RolePermissions.isSiteAdmin) {\n      this.router.navigate([`/department`]);\n      //this.router.navigate([`/view-permissions`]);\n    }\n\n  }\n  onNavigateDepartmentPage(): void {\n    this.router.navigate([`/view-permissions`]);\n  }\n  onLogout(): void {\n    this.authService.logout();\n    const me = this;\n    window.sessionStorage.clear();\n    window.localStorage.clear();\n    me.authService.isLoggedIn().then((status) => {\n      if (status) {\n        me.authService.logout();\n      }\n    });\n  }\n}\n","<nav >\n  <div style=\"width: 100%; display: table;\">\n    <div style=\"display: table-row\">\n      <div style=\"width: 600px; display: table-cell;\">\n    <!-- <button mat-button color=\"primary\">Primary</button> -->\n    <button style='width:50% !important' class='p-button-success ' *ngIf='rolePermissions.isSystemAdmin' (click)='onNavigateSitePage()'>Create Site/SiteAdmin</button>\n    <button style='width:50% !important'*ngIf='rolePermissions.isSiteAdmin' (click)='onNavigateSitePage()'>Create Department/SiteUser</button>\n    <!-- <a *ngIf='rolePermissions.isSiteAdmin' (click)='onNavigateSitePage()'>Create </a> -->\n    <button style='width:50% !important' (click)='onNavigateDepartmentPage()' *ngIf='rolePermissions.isSiteUser'>View Department</button>\n    <button style='width:50% !important' (click)='onNavigateDepartmentPage()' *ngIf='rolePermissions.isSiteAdmin'>Set Permissions</button>\n  </div>\n    </div>\n  </div>\n  <div style=\"display: table-cell;float:right\">\n    <!-- <button mat-button color=\"primary\">Primary</button> -->\n    <button pbutton class='p-button-success ' (click)='onLogout()'>Logout</button>\n  </div>\n</nav>\n","import { LocalService } from './auth/service/local.service';\nimport { HostUrlService } from './services/host.url.service';\nimport { POCService } from './services/poc.service';\nimport { HttpService } from './services/http.service';\nimport { CreateDepartment } from './landing/nav-bar/departments/create-department/create-department.component';\nimport { AddSites } from './landing/nav-bar/sites/add-sites/add-site.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { ViewPermissions } from './landing/nav-bar/view-permissions/view-permission.component';\nimport { SitesComponent } from './landing/nav-bar/sites/sites.component';\nimport { NavBarComponent } from './landing/nav-bar/nav-bar.component';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { HomeComponent } from './landing/nav-bar/home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatDialogContent, MatDialogModule , MatDialogActions} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { Department } from './landing/nav-bar/departments/department.component';\n\n\nimport { MatSelectModule } from '@angular/material/select';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { initializer } from './auth/keycloak-initializer';\nimport { KeycloakService, KeycloakAngularModule } from 'keycloak-angular';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AuthService } from './auth/service/auth.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavBarComponent,\n    SitesComponent,\n    ViewPermissions,\n    Department,\n    AddSites,\n    CreateDepartment\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    CdkAccordionModule,\n    MatGridListModule,\n    MatDialogModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatSelectModule,\n    HttpClientModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n    KeycloakAngularModule\n\n  ],\n  providers: [HttpService, POCService, HostUrlService, KeycloakService,LocalService, {\n    provide: APP_INITIALIZER,\n    useFactory: initializer,\n    deps: [ KeycloakService ],\n    multi: true\n  }, AuthGuard,\n  AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import keycloakConfig from './keycloak.config';\nconst hostname = 'dev-eai-1.dev.terarecon.in';\nconst protocol = 'https:';\nexport const environment = {\n  production: true,\n  keycloak: keycloakConfig,\n  webServer: {\n    createSites: `${protocol}//${hostname}/api/lrp/realm`,\n    createUser: `${protocol}//${hostname}/api/lrp/realm/user`,\n    department: `${protocol}//${hostname}/api/lrp/department`,\n    departmentPermissions: `${protocol}//${hostname}/api/lrp/user/departments`,\n    users: `${protocol}//${hostname}/api/lrp/realm/user`,\n  },\n};\n","import { LocalService } from './service/local.service';\nimport { KeycloakOptions, KeycloakService } from 'keycloak-angular';\nimport { environment } from '../../environments/environment';\n\nexport function initializer(keycloak: KeycloakService): () => Promise<boolean> {\n  // localStorage.clear();\n\n  const segments = new URL(window.location.href).pathname.split('/');\n  const last = segments.pop() || segments.pop(); // Handle potential trailing slash\n  if ((last || 'master').startsWith('site-')) {\n    localStorage.setItem('realm', last || 'master');\n    environment.keycloak.realm = last || 'master';\n  } else if ((last || 'master').length === 0) {\n    localStorage.clear();\n  } else if ((last || 'master').length > 0) {\n    const realm = localStorage.getItem('realm');\n    if (realm) {\n      environment.keycloak.realm = last || 'master';\n    }\n  }\n  const options: KeycloakOptions = {\n    config: environment.keycloak,\n    // bearerExcludedUrls: [],\n    loadUserProfileAtStartUp: true,\n    initOptions: {\n      //onLoad: 'check-sso',\n      onLoad: 'login-required',\n      checkLoginIframe: false,\n    },\n    bearerExcludedUrls: [],\n  };\n\n  return () => keycloak.init(options);\n}\n// export function initializer(keycloak: KeycloakService): () => Promise<boolean> {\n//   return (): Promise<any> => {\n//       return new Promise(async (resolve, reject) => {\n//         try {\n//           await keycloak.init({\n//               config: {\n//                   url: environment.keycloak.url,\n//                   realm: environment.keycloak.realm,\n//                   clientId: environment.keycloak.clientId\n//               },\n//             loadUserProfileAtStartUp: false,\n//             initOptions: {\n//               onLoad: 'login-required',\n//               checkLoginIframe: true\n//             },\n//             bearerExcludedUrls: []\n//           });\n//           resolve(true);\n//         } catch (error) {\n//           reject(error);\n//         }\n//       });\n//     };\n// }\n","export class UserPermissions {\n  public static readonly SYSTEMADMIN = 'SystemAdmin';\n  public static readonly SERVICE = 'SERVICE';\n  public static readonly CLINICAL = 'CLINICAL';\n}\n","import { AuthService } from '../../../auth/service/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { RolePermissions } from 'src/constants/user-permission';\nimport { Router } from '@angular/router';\nimport { UserPermissions } from 'src/models/permissions';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent  {\n\n  isSiteAdmin = false;\n  rolePermissions = RolePermissions;\n  constructor(private authService: AuthService, private router: Router) {\n\n  }\n    // tslint:disable-next-line:align\n  //   this.checkPermissions();\n  //   console.log(this.authService.hasUserRole(UserPermissions.SITEADMIN));\n  //   console.log(this.authService.getRoles())\n  // }\n  // checkPermissions(): void {\n  //   if (this.authService.hasUserRole(UserPermissions.SITEADMIN)) {\n  //     RolePermissions.isSiteAdmin = true;\n  //   } else if (this.authService.hasUserRole(UserPermissions.SITEUSER)) {\n  //     RolePermissions.isSiteUser = true;\n  //   } else if (this.authService.hasUserRole(UserPermissions.SYSTEMADMIN)) {\n  //     RolePermissions.isSystemAdmin = true;\n  //   }\n  // }\n  // onNavigateSitePage(): void {\n  //   this.router.navigate([`/sites`]);\n  // }\n\n}\n","\n\nimport { Department } from './landing/nav-bar/departments/department.component';\nimport { ViewPermissions } from './landing/nav-bar/view-permissions/view-permission.component';\nimport { SitesComponent } from './landing/nav-bar/sites/sites.component';\nimport { NgModule, Component } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { HomeComponent } from './landing/nav-bar/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full',\n  },\n  {\n    path: 'site-one',\n    component: HomeComponent,\n  },\n  {\n    path: 'sites',\n    component: SitesComponent,\n  },\n  {\n    path: 'view-permissions',\n    component: ViewPermissions,\n  },\n  {\n    path: 'department',\n    component: Department,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { element } from 'protractor';\nimport { RolePermissions } from './../../../../constants/user-permission';\nimport { AuthService } from './../../../auth/service/auth.service';\nimport { POCService } from './../../../services/poc.service';\nimport { Component } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nexport interface DepartmentList {\n  department: string;\n  permission: number;\n  read: string;\n  write: string;\n  readwrite: string;\n  users: string;\n}\n\nconst ELEMENT_DATA: DepartmentList[] = [];\n@Component({\n  selector: 'app-view-permissions',\n  templateUrl: './view-permission.component.html',\n  styleUrls: ['./view-permission.component.scss'],\n})\nexport class ViewPermissions {\n  displayedColumns: string[] = [\n    'position',\n    'department',\n    'read',\n    'write',\n    'readwrite',\n    'users',\n  ];\n  userDetails: any;\n  dataSource = new MatTableDataSource();\n  departments: any = [];\n  roles = RolePermissions;\n  departmentList: any = [];\n\n  toppingList: string[] = [\n    'Extra cheese',\n    'Mushroom',\n    'Onion',\n    'Pepperoni',\n    'Sausage',\n    'Tomato',\n  ];\n  permissionsChecked = {\n    isRead: 'READ_ONLY',\n    isWrite: 'READ_WRITE',\n    isReadWrite: 'ADMIN',\n  };\n  siteUsers: any = [];\n  isPermissionsHas = {\n    isRead: false,\n    isWrite: false,\n    isReadWrite: false,\n  };\n  permissionObj: any = {\n    userName: '',\n    permissions: [],\n  };\n  constructor(\n    private pocService: POCService,\n    private authService: AuthService\n  ) {\n    this.getDepartments();\n    if (RolePermissions.isSiteAdmin) {\n      this.getSiteUsers();\n    }\n  }\n  getDepartments(): void {\n    this.pocService.getDepartments().then((departments) => {\n      if (departments.departments.length > 0) {\n        // this.departments = departments.departments;\n\n        departments.departments.forEach((val: any, index: any) => {\n          this.departmentList.push({ position: index, departmentName: val });\n        });\n      }\n      console.log(this.departmentList);\n      this.dataSource = new MatTableDataSource(this.departmentList);\n      this.getUserInfo();\n    });\n  }\n  getUserInfo(): void {\n    this.authService.loadUserProfile().then((res) => {\n      this.pocService\n        .getDepartmentsUserPermissions(res.username)\n        .then((permissions) => {\n          permissions.user.permissions.forEach((val: any) => {\n            const findElement = this.departments.findIndex(\n              (x: { department: any }) => x.department === val.departmentName\n            );\n            console.log(findElement);\n            if (val.permission === this.permissionsChecked.isRead) {\n              val.isRead = true;\n              this.departmentList.push(val);\n              //  this.departments[findElement].isRead = true;\n            } else if (val.permission === this.permissionsChecked.isWrite) {\n              val.isWrite = true;\n              this.departmentList.push(val);\n              //  this.departments[findElement].isWrite = true;\n            } else {\n              val.isReadWrite = true;\n              this.departmentList.push(val);\n              //  this.departments[findElement].isReadWrite = true;\n            }\n          });\n          debugger;\n          this.dataSource = new MatTableDataSource(this.departmentList);\n        });\n    });\n  }\n  onChange(element: any, event: any, typePermission: any) {\n    debugger;\n    if (event.checked) {\n      const obj = {\n        departmentName: element.departmentName,\n        permission: typePermission,\n      };\n      this.authService.loadUserProfile().then((res) => {\n        console.log(res);\n        // const userDetails = 'site1user@gmail.com';\n        this.permissionObj.userName = element?.username;\n      });\n\n      this.permissionObj.permissions.push(obj);\n      console.log(this.permissionObj);\n    } else {\n      // tslint:disable-next-line:max-line-length\n      const findIndex = this.permissionObj.permissions.findIndex(\n        (x: { departmentName: any }) =>\n          x.departmentName === element.deartmentName\n      );\n      if (findIndex) {\n        this.permissionObj.permissions.splice(findIndex, 1);\n      }\n    }\n  }\n  addPermissions(): void {\n    this.pocService.addPermissions(this.permissionObj).then((res) => {\n      alert('Succes');\n    });\n  }\n  getSiteUsers(): void {\n    this.pocService.getSiteUsers().then((siteUsers) => {\n      this.siteUsers = siteUsers.users;\n    });\n  }\n  onUserChange(element: any, event: any): any {\n    console.log(event);\n    element.username = event.value;\n  }\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"department\">\n    <th mat-header-cell *matHeaderCellDef> Department </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.departmentName}} </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"read\">\n    <th mat-header-cell *matHeaderCellDef> Read </th>\n    <td mat-cell *matCellDef=\"let element\">  <mat-checkbox class=\"example-margin\"  [(ngModel)]='element.isRead'(change)='onChange(element, $event,permissionsChecked.isRead)'></mat-checkbox></td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"write\">\n    <th mat-header-cell *matHeaderCellDef> Write </th>\n    <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" [(ngModel)]='element.isWrite' (change)='onChange(element, $event, permissionsChecked.isWrite)'></mat-checkbox> </td>\n  </ng-container>\n  <ng-container matColumnDef=\"readwrite\">\n    <th mat-header-cell *matHeaderCellDef> Read/Write </th>\n    <td mat-cell *matCellDef=\"let element\"> <mat-checkbox class=\"example-margin\" [(ngModel)]='element.isReadWrite' (change)='onChange(element, $event, permissionsChecked.isReadWrite)'></mat-checkbox> </td>\n  </ng-container>\n  <ng-conatiner matColumnDef=\"users\">\n\n      <th mat-header-cell *matHeaderCellDef > Select User </th>\n      <td mat-cell *matCellDef=\"let element\">\n      <mat-form-field appearance=\"fill\" *ngIf='roles.isSiteAdmin'>\n        <mat-label>User</mat-label>\n        <mat-select (selectionChange)=\"onUserChange(element,$event)\">\n\n          <mat-option *ngFor=\"let site of siteUsers\" [value]=\"site\">{{site}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      </td>\n\n\n  </ng-conatiner>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n\n</table>\n<div style=\"display: table-cell;float:right\">\n  <button mat-flat-button color=\"primary\" *ngIf='roles.isSiteAdmin\n  ' (click)='addPermissions()'>Save </button>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}